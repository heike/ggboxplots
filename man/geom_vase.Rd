% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/geom-vase.r
\name{geom_vase}
\alias{geom_vase}
\title{Side by side vase plots.}
\usage{
geom_vase(mapping = NULL, data = NULL, stat = "vase",
  position = "dodge", show.legend = NA, inherit.aes = TRUE, width = 0.9,
  alpha = 0.25, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link{aes}} or
\code{\link{aes_}}. If specified and \code{inherit.aes = TRUE} (the
default), is combined with the default mapping at the top level of the
plot. You only need to supply \code{mapping} if there isn't a mapping
defined for the plot.}

\item{data}{A data frame. If specified, overrides the default data frame
defined at the top level of the plot.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link{borders}}.}

\item{...}{other arguments passed on to \code{\link{layer}}. There are
  three types of arguments you can use here:

  \itemize{
  \item Aesthetics: to set an aesthetic to a fixed value, like
     \code{color = "red"} or \code{size = 3}.
  \item Other arguments to the layer, for example you override the
    default \code{stat} associated with the layer.
  \item Other arguments passed on to the stat.
  }}
}
\description{
Side by side vase plots.
}
\examples{
\donttest{
p <- ggplot(mtcars, aes(factor(cyl), mpg))

p + geom_vase()
qplot(factor(cyl), mpg, data = mtcars, geom = "vase")

p + geom_vase() + geom_jitter(height = 0)
p + geom_vase() + coord_flip()
qplot(factor(cyl), mpg, data = mtcars, geom = "vase") +
  coord_flip()

# Scale maximum width proportional to sample size:
p + geom_vase(scale = "count")

# Scale maximum width to 1 for all violins:
p + geom_vase(scale = "width")

# Use a smaller bandwidth for closer density fit (default is 1).
p + geom_vase(adjust = .5)

# Add aesthetic mappings
# Note that vases are automatically dodged when any aesthetic is
# a factor
p + geom_vase(aes(fill = cyl))
p + geom_vase(aes(fill = factor(cyl)))
p + geom_vase(aes(fill = factor(vs)))
p + geom_vase(aes(fill = factor(am)))

# Set aesthetics to fixed value
p + geom_vase(fill = "grey80", colour = "#3366FF")
qplot(factor(cyl), mpg, data = mtcars, geom = "vase",
  colour = I("#3366FF"))

# Scales vs. coordinate transforms -------
# Scale transformations occur before the density statistics are computed.
# Coordinate transformations occur afterwards.  Observe the effect on the
# number of outliers.
library(plyr) # to access round_any
m <- ggplot(movies, aes(y = votes, x = rating,
   group = round_any(rating, 0.5)))
m + geom_vase()
m + geom_vase() + scale_y_log10()
m + geom_vase() + coord_trans(y = "log10")
m + geom_vase() + scale_y_log10() + coord_trans(y = "log10")

# Vase plots with continuous x:
# Use the group aesthetic to group observations in violins
qplot(year, budget, data = movies, geom = "vase")
qplot(year, budget, data = movies, geom = "vase",
  group = round_any(year, 10, floor))

x <- rnorm(2000)
group <- rep(1:20, 100)
y <- rep(c(1,2),1000)
qplot(y,x,facets=~group, fill=factor(y), geom="vase")
}
}

